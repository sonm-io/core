syntax = "proto3";

import "bid.proto";
import "insonmnia.proto";

package sonm;

service Market {
    rpc GetOrders(GetOrdersRequest) returns (GetOrdersReply) {}
    rpc GetOrderByID(ID) returns (Order) {}
    rpc CreateOrder(Order) returns (Order) {}
    rpc CancelOrder(Order) returns (Empty) {}
    // GetProcessing returns currently processing orders
    // not required in Marketplace service
    // must be implemented on Node
    rpc GetProcessing(Empty) returns (GetProcessingReply) {}
}

message GetOrdersRequest {
    // Slot describe resuorces to search for
    Slot slot = 1;
    // OrderType describe a type of orders to search
    OrderType orderType = 2;
    // Count describe how namy results must be returned (order by price)
    uint64 count = 3;
}

message GetOrdersReply {
    repeated Order orders = 1;
}

// GetProcessingReply represent Node's local
// orders processing status
message GetProcessingReply {
    message ProcessedOrder {
        string id = 1;
        uint32 status = 2;
        Timestamp timestamp = 3;
        string extra = 4;
    }

    map <string, ProcessedOrder> orders = 2;
}