syntax = "proto3";

import "capabilities.proto";
import "container.proto";
import "insonmnia.proto";
import "nat.proto";
import "net.proto";

package sonm;

service Miner {
    rpc Ping(Empty) returns (PingReply) {}
    rpc Info(Empty) returns (InfoReply) {}
    rpc Handshake(MinerHandshakeRequest) returns (MinerHandshakeReply) {}

    rpc Save(SaveRequest) returns (stream Chunk) {}
    rpc Load(stream Chunk) returns (stream Progress) {}
    rpc Start(MinerStartRequest) returns (MinerStartReply) {}
    rpc Stop(ID) returns (Empty) {}

    rpc TasksStatus(stream MinerStatusMapRequest) returns (stream StatusMapReply) {}
    rpc TaskDetails(ID) returns (TaskStatusReply) {}

    rpc TaskLogs(TaskLogsRequest) returns (stream TaskLogsChunk) {}
    rpc DiscoverHub(DiscoverHubRequest) returns (Empty) {}
}

message MinerHandshakeRequest {
    string hub = 1;
    repeated TaskInfo tasks = 2;
}

message MinerHandshakeReply {
    string miner = 1;
    Capabilities capabilities = 2;
    NATType natType = 3;
}

message MinerStartRequest{
    string id = 1;
    // Container describes container settings.
    Container container = 2;
    ContainerRestartPolicy restartPolicy = 3;
    TaskResourceRequirements resources = 4;
    // OrderId describes an unique order identifier.
    // It is here for proper resource allocation and limitation.
    string orderId = 5;
}

message MinerStartReply {
    string container = 1;
    // PortMap represent port mapping between container network and host ones.
    map<string, Endpoints> portMap = 2;
}

message TaskInfo {
    MinerStartRequest request = 1;
    MinerStartReply reply = 2;
}

message Endpoints {
    repeated SocketAddr endpoints = 1;
}

message MinerStatusMapRequest {}

message SaveRequest {
    string imageID = 1;
}
