syntax = "proto3";

import "insonmnia.proto";

package sonm;

service Hub {
    rpc Ping(PingRequest) returns (PingReply) {}
    rpc Status(HubStatusRequest) returns (HubStatusReply) {}
    rpc List(ListRequest) returns (ListReply) {}
    rpc Info(HubInfoRequest) returns (InfoReply) {}

    rpc StartTask(HubStartTaskRequest) returns (HubStartTaskReply) {}
    rpc StopTask(StopTaskRequest) returns (StopTaskReply) {}

    rpc TaskStatus(TaskStatusRequest) returns (TaskStatusReply) {}
    rpc MinerStatus(HubStatusMapRequest) returns (StatusMapReply) {}
    rpc TaskLogs(TaskLogsRequest) returns (stream TaskLogsChunk) {}
}

message ListRequest {
}

message ListReply {
    message ListValue {
        repeated string values = 1;
    }
    map<string, ListValue> info = 1;
}

message HubInfoRequest {
    string miner = 1;
}

message TaskResourceRequirements {
    // Number of CPU cores.
    uint64 CPUCores = 1;
    // Memory in bytes required.
    uint64 maxMemory = 2;
    // Describes whether a task requires GPU supoort.
    bool GPUSupport = 3;
}

message TaskRequirements {
    // How much resources consumes a task. This is used both for scheduling and for cgroups configuration.
    TaskResourceRequirements resources = 1;

    // Optional miner ID restrictions (currently IP:port), that are allowed to start a task.
    repeated string miners = 2;
}

message HubStartTaskRequest {
    TaskRequirements requirements = 1;
    string registry = 2;
    string image = 3;
    string auth = 4;
    string PublicKeyData = 5;
    bool commitOnStop = 6;
}

message HubStartTaskReply {
    string id = 1;
    repeated string endpoint = 2;
}

message HubStatusMapRequest {
    string miner = 1;
}

message HubStatusRequest {}

message HubStatusReply {
    uint64 minerCount = 1;
    uint64 uptime = 2;
}
