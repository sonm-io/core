// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bid.proto

package sonm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BidNetwork struct {
	Overlay  bool `protobuf:"varint,1,opt,name=overlay" json:"overlay,omitempty"`
	Outbound bool `protobuf:"varint,2,opt,name=outbound" json:"outbound,omitempty"`
	Incoming bool `protobuf:"varint,3,opt,name=incoming" json:"incoming,omitempty"`
}

func (m *BidNetwork) Reset()                    { *m = BidNetwork{} }
func (m *BidNetwork) String() string            { return proto.CompactTextString(m) }
func (*BidNetwork) ProtoMessage()               {}
func (*BidNetwork) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *BidNetwork) GetOverlay() bool {
	if m != nil {
		return m.Overlay
	}
	return false
}

func (m *BidNetwork) GetOutbound() bool {
	if m != nil {
		return m.Outbound
	}
	return false
}

func (m *BidNetwork) GetIncoming() bool {
	if m != nil {
		return m.Incoming
	}
	return false
}

type BidResources struct {
	Network    *BidNetwork       `protobuf:"bytes,1,opt,name=network" json:"network,omitempty"`
	Benchmarks map[string]uint64 `protobuf:"bytes,2,rep,name=benchmarks" json:"benchmarks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *BidResources) Reset()                    { *m = BidResources{} }
func (m *BidResources) String() string            { return proto.CompactTextString(m) }
func (*BidResources) ProtoMessage()               {}
func (*BidResources) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *BidResources) GetNetwork() *BidNetwork {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *BidResources) GetBenchmarks() map[string]uint64 {
	if m != nil {
		return m.Benchmarks
	}
	return nil
}

type BidOrder struct {
	ID        string              `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Duration  *Duration           `protobuf:"bytes,2,opt,name=duration" json:"duration,omitempty"`
	Price     *Price              `protobuf:"bytes,3,opt,name=price" json:"price,omitempty"`
	Blacklist *EthAddress         `protobuf:"bytes,4,opt,name=blacklist" json:"blacklist,omitempty"`
	Identity  MarketIdentityLevel `protobuf:"varint,5,opt,name=identity,enum=sonm.MarketIdentityLevel" json:"identity,omitempty"`
	Tag       string              `protobuf:"bytes,6,opt,name=tag" json:"tag,omitempty"`
	Resources *BidResources       `protobuf:"bytes,7,opt,name=resources" json:"resources,omitempty"`
}

func (m *BidOrder) Reset()                    { *m = BidOrder{} }
func (m *BidOrder) String() string            { return proto.CompactTextString(m) }
func (*BidOrder) ProtoMessage()               {}
func (*BidOrder) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *BidOrder) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *BidOrder) GetDuration() *Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *BidOrder) GetPrice() *Price {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *BidOrder) GetBlacklist() *EthAddress {
	if m != nil {
		return m.Blacklist
	}
	return nil
}

func (m *BidOrder) GetIdentity() MarketIdentityLevel {
	if m != nil {
		return m.Identity
	}
	return MarketIdentityLevel_MARKET_ANONIMOUS
}

func (m *BidOrder) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *BidOrder) GetResources() *BidResources {
	if m != nil {
		return m.Resources
	}
	return nil
}

type Resources struct {
	// CPU core count
	CpuCores uint64 `protobuf:"varint,1,opt,name=cpuCores" json:"cpuCores,omitempty"`
	// RAM, in bytes
	RamBytes uint64 `protobuf:"varint,2,opt,name=ramBytes" json:"ramBytes,omitempty"`
	// GPU devices count
	GpuCount GPUCount `protobuf:"varint,3,opt,name=gpuCount,enum=sonm.GPUCount" json:"gpuCount,omitempty"`
	// todo: discuss
	// storage volume, in Megabytes
	Storage uint64 `protobuf:"varint,4,opt,name=storage" json:"storage,omitempty"`
	// Inbound network traffic (the higher value), in bytes
	NetTrafficIn uint64 `protobuf:"varint,5,opt,name=netTrafficIn" json:"netTrafficIn,omitempty"`
	// Outbound network traffic (the higher value), in bytes
	NetTrafficOut uint64 `protobuf:"varint,6,opt,name=netTrafficOut" json:"netTrafficOut,omitempty"`
	// Allowed network connections
	NetworkType NetworkType `protobuf:"varint,7,opt,name=networkType,enum=sonm.NetworkType" json:"networkType,omitempty"`
	// Other properties/benchmarks. The higher means better.
	Properties map[string]float64 `protobuf:"bytes,8,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
}

func (m *Resources) Reset()                    { *m = Resources{} }
func (m *Resources) String() string            { return proto.CompactTextString(m) }
func (*Resources) ProtoMessage()               {}
func (*Resources) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *Resources) GetCpuCores() uint64 {
	if m != nil {
		return m.CpuCores
	}
	return 0
}

func (m *Resources) GetRamBytes() uint64 {
	if m != nil {
		return m.RamBytes
	}
	return 0
}

func (m *Resources) GetGpuCount() GPUCount {
	if m != nil {
		return m.GpuCount
	}
	return GPUCount_NO_GPU
}

func (m *Resources) GetStorage() uint64 {
	if m != nil {
		return m.Storage
	}
	return 0
}

func (m *Resources) GetNetTrafficIn() uint64 {
	if m != nil {
		return m.NetTrafficIn
	}
	return 0
}

func (m *Resources) GetNetTrafficOut() uint64 {
	if m != nil {
		return m.NetTrafficOut
	}
	return 0
}

func (m *Resources) GetNetworkType() NetworkType {
	if m != nil {
		return m.NetworkType
	}
	return NetworkType_NO_NETWORK
}

func (m *Resources) GetProperties() map[string]float64 {
	if m != nil {
		return m.Properties
	}
	return nil
}

func init() {
	proto.RegisterType((*BidNetwork)(nil), "sonm.BidNetwork")
	proto.RegisterType((*BidResources)(nil), "sonm.BidResources")
	proto.RegisterType((*BidOrder)(nil), "sonm.BidOrder")
	proto.RegisterType((*Resources)(nil), "sonm.Resources")
}

func init() { proto.RegisterFile("bid.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x55, 0xd2, 0x6c, 0x4b, 0x6e, 0x46, 0x37, 0x2c, 0x1e, 0x42, 0x5f, 0x18, 0x11, 0x0f, 0xd5,
	0x1e, 0x2a, 0x94, 0x09, 0x09, 0x21, 0x21, 0x44, 0xe8, 0x84, 0x2a, 0xc1, 0x56, 0x59, 0xe3, 0x15,
	0xc9, 0x4d, 0xbc, 0xd6, 0x6a, 0x6b, 0x47, 0xb6, 0xd3, 0xa9, 0xff, 0x80, 0x1f, 0xc0, 0xdf, 0xe1,
	0xbf, 0x21, 0xdb, 0xf9, 0xe8, 0xc6, 0x03, 0x4f, 0xf1, 0xb9, 0xe7, 0xdc, 0xf8, 0xde, 0x93, 0x13,
	0x88, 0x16, 0xac, 0x9c, 0x54, 0x52, 0x68, 0x81, 0x02, 0x25, 0xf8, 0x76, 0x74, 0xc6, 0xb8, 0x79,
	0x72, 0x46, 0x5c, 0x79, 0x14, 0x95, 0x0f, 0x2b, 0x77, 0x4c, 0x7f, 0x02, 0xe4, 0xac, 0xbc, 0xa1,
	0xfa, 0x41, 0xc8, 0x35, 0x4a, 0xe0, 0x44, 0xec, 0xa8, 0xdc, 0x90, 0x7d, 0xe2, 0x5d, 0x78, 0xe3,
	0x10, 0xb7, 0x10, 0x8d, 0x20, 0x14, 0xb5, 0x5e, 0x88, 0x9a, 0x97, 0x89, 0x6f, 0xa9, 0x0e, 0x1b,
	0x8e, 0xf1, 0x42, 0x6c, 0x19, 0x5f, 0x26, 0x03, 0xc7, 0xb5, 0x38, 0xfd, 0xe3, 0xc1, 0x69, 0xce,
	0x4a, 0x4c, 0x95, 0xa8, 0x65, 0x41, 0x15, 0xba, 0x84, 0x13, 0xee, 0x6e, 0xb3, 0x57, 0xc4, 0xd9,
	0xf9, 0xc4, 0x0c, 0x37, 0xe9, 0xa7, 0xc0, 0xad, 0x00, 0xe5, 0x00, 0x0b, 0xca, 0x8b, 0xd5, 0x96,
	0xc8, 0xb5, 0x4a, 0xfc, 0x8b, 0xc1, 0x38, 0xce, 0xd2, 0x4e, 0xde, 0xbd, 0x73, 0x92, 0x77, 0xa2,
	0x6b, 0xae, 0xe5, 0x1e, 0x1f, 0x74, 0x8d, 0x3e, 0xc2, 0xd9, 0x13, 0x1a, 0x9d, 0xc3, 0x60, 0x4d,
	0xdd, 0x86, 0x11, 0x36, 0x47, 0xf4, 0x02, 0x8e, 0x76, 0x64, 0x53, 0x53, 0xbb, 0x5a, 0x80, 0x1d,
	0xf8, 0xe0, 0xbf, 0xf7, 0xd2, 0xdf, 0x3e, 0x84, 0x39, 0x2b, 0x6f, 0x65, 0x49, 0x25, 0x1a, 0x82,
	0x3f, 0x9b, 0x36, 0x7d, 0xfe, 0x6c, 0x8a, 0x2e, 0x21, 0x2c, 0x6b, 0x49, 0x34, 0x13, 0xdc, 0x76,
	0xc6, 0xd9, 0xd0, 0x4d, 0x37, 0x6d, 0xaa, 0xb8, 0xe3, 0xd1, 0x6b, 0x38, 0xaa, 0x24, 0x2b, 0xa8,
	0x75, 0x28, 0xce, 0x62, 0x27, 0x9c, 0x9b, 0x12, 0x76, 0x0c, 0x9a, 0x40, 0xb4, 0xd8, 0x90, 0x62,
	0xbd, 0x61, 0x4a, 0x27, 0xc1, 0xa1, 0x39, 0xd7, 0x7a, 0xf5, 0xb9, 0x2c, 0x25, 0x55, 0x0a, 0xf7,
	0x12, 0xf4, 0x0e, 0x42, 0x56, 0x52, 0xae, 0x99, 0xde, 0x27, 0x47, 0x17, 0xde, 0x78, 0x98, 0xbd,
	0x74, 0xf2, 0xef, 0x44, 0xae, 0xa9, 0x9e, 0x35, 0xdc, 0x37, 0xba, 0xa3, 0x1b, 0xdc, 0x49, 0xcd,
	0xfa, 0x9a, 0x2c, 0x93, 0x63, 0xb7, 0xbe, 0x26, 0x4b, 0xf4, 0x16, 0x22, 0xd9, 0x9a, 0x99, 0x9c,
	0xd8, 0x8b, 0xd1, 0xbf, 0x36, 0xe3, 0x5e, 0x94, 0xfe, 0x1a, 0x40, 0xd4, 0x7f, 0xd3, 0x11, 0x84,
	0x45, 0x55, 0x7f, 0x11, 0x92, 0x2a, 0xeb, 0x4e, 0x80, 0x3b, 0x6c, 0x38, 0x49, 0xb6, 0xf9, 0x5e,
	0x53, 0xd5, 0xb8, 0xdb, 0x61, 0xe3, 0xdf, 0xd2, 0xe8, 0x6a, 0xae, 0xad, 0x2d, 0xc3, 0xd6, 0xbf,
	0xaf, 0xf3, 0x1f, 0xb6, 0x8a, 0x3b, 0xde, 0x44, 0x53, 0x69, 0x21, 0xc9, 0x92, 0x5a, 0x6b, 0x02,
	0xdc, 0x42, 0x94, 0xc2, 0x29, 0xa7, 0xfa, 0x4e, 0x92, 0xfb, 0x7b, 0x56, 0xcc, 0xb8, 0xb5, 0x22,
	0xc0, 0x8f, 0x6a, 0xe8, 0x0d, 0x3c, 0xeb, 0xf1, 0x6d, 0xad, 0xed, 0xf6, 0x01, 0x7e, 0x5c, 0x44,
	0x57, 0x10, 0x37, 0xd1, 0xbb, 0xdb, 0x57, 0xd4, 0x3a, 0x31, 0xcc, 0x9e, 0xbb, 0x91, 0x6e, 0x7a,
	0x02, 0x1f, 0xaa, 0xd0, 0x27, 0x80, 0x4a, 0x8a, 0x8a, 0x4a, 0xcd, 0xa8, 0x4a, 0x42, 0x1b, 0xd2,
	0x57, 0xae, 0xa7, 0x4f, 0xe8, 0xbc, 0x53, 0x34, 0x09, 0xed, 0x5b, 0x4c, 0x42, 0x9f, 0xd0, 0xff,
	0x4b, 0xa8, 0x77, 0x90, 0xd0, 0xc5, 0xb1, 0xfd, 0x91, 0xaf, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x53, 0x1b, 0x1c, 0xaf, 0xf7, 0x03, 0x00, 0x00,
}
