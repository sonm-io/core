syntax = "proto3";

package miner;

service Miner{
    rpc Ping(PingRequest) returns (PingReply) {}
    rpc Info(InfoRequest) returns (InfoReply) {}
    rpc Handshake(HandshakeRequest) returns (HandshakeReply) {}

    rpc Start(StartRequest) returns (StartReply) {}
    rpc Stop(StopRequest) returns (StopReply) {}

    rpc TasksStatus(stream TasksStatusRequest) returns (stream TasksStatusReply) {}
}

message PingRequest {}

message PingReply {
    string status = 1;
}

message InfoRequest {
}

message InfoReply {
    message stats {
        message cpu {
            uint64 totalUsage = 1;
        }

        message memory {
            uint64 maxUsage = 1;
        }

        cpu CPU = 1;
        memory Memory = 2;
    }

    map<string, stats> Stats = 1;
}

message HandshakeRequest {
    string hub = 1;
}

message HandshakeReply {
    string miner = 1;
}

message StartRequest{
    string id = 1;
    string registry = 2;
    string image = 3;
}

message StartReply {
    string container = 1;
    message port {
        string IP = 1;
        string port = 2;
    }
    map<string, port> Ports = 2;
}

message StopRequest {
    string id = 1;
}

message StopReply {}

message TasksStatusRequest {
}

message TaskStatus {
    enum Status {
        UNKNOWN = 0;
        SPOOLING = 1;
        SPAWNING = 2;
        RUNNING = 3;
        FINISHED = 4;
        BROKEN = 5;
    }
    Status status = 1;
}

message TasksStatusReply {
    map<string, TaskStatus> statuses = 1;
}
