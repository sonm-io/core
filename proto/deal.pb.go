// Code generated by protoc-gen-go. DO NOT EDIT.
// source: deal.proto

package sonm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DealStatus int32

const (
	DealStatus_PENDING  DealStatus = 0
	DealStatus_APPROVED DealStatus = 1
	DealStatus_FINISHED DealStatus = 2
)

var DealStatus_name = map[int32]string{
	0: "PENDING",
	1: "APPROVED",
	2: "FINISHED",
}
var DealStatus_value = map[string]int32{
	"PENDING":  0,
	"APPROVED": 1,
	"FINISHED": 2,
}

func (x DealStatus) String() string {
	return proto.EnumName(DealStatus_name, int32(x))
}
func (DealStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type Deal struct {
	BidID  string     `protobuf:"bytes,1,opt,name=bidID" json:"bidID,omitempty"`
	AskID  string     `protobuf:"bytes,2,opt,name=askID" json:"askID,omitempty"`
	Status DealStatus `protobuf:"varint,3,opt,name=status,enum=sonm.DealStatus" json:"status,omitempty"`
}

func (m *Deal) Reset()                    { *m = Deal{} }
func (m *Deal) String() string            { return proto.CompactTextString(m) }
func (*Deal) ProtoMessage()               {}
func (*Deal) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Deal) GetBidID() string {
	if m != nil {
		return m.BidID
	}
	return ""
}

func (m *Deal) GetAskID() string {
	if m != nil {
		return m.AskID
	}
	return ""
}

func (m *Deal) GetStatus() DealStatus {
	if m != nil {
		return m.Status
	}
	return DealStatus_PENDING
}

func init() {
	proto.RegisterType((*Deal)(nil), "sonm.Deal")
	proto.RegisterEnum("sonm.DealStatus", DealStatus_name, DealStatus_value)
}

func init() { proto.RegisterFile("deal.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x49, 0x4d, 0xcc,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x29, 0xce, 0xcf, 0xcb, 0x55, 0x8a, 0xe1, 0x62,
	0x71, 0x49, 0x4d, 0xcc, 0x11, 0x12, 0xe1, 0x62, 0x4d, 0xca, 0x4c, 0xf1, 0x74, 0x91, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x70, 0x40, 0xa2, 0x89, 0xc5, 0xd9, 0x9e, 0x2e, 0x12, 0x4c, 0x10,
	0x51, 0x30, 0x47, 0x48, 0x83, 0x8b, 0xad, 0xb8, 0x24, 0xb1, 0xa4, 0xb4, 0x58, 0x82, 0x59, 0x81,
	0x51, 0x83, 0xcf, 0x48, 0x40, 0x0f, 0x64, 0x94, 0x1e, 0xc8, 0x9c, 0x60, 0xb0, 0x78, 0x10, 0x54,
	0x5e, 0xcb, 0x94, 0x8b, 0x0b, 0x21, 0x2a, 0xc4, 0xcd, 0xc5, 0x1e, 0xe0, 0xea, 0xe7, 0xe2, 0xe9,
	0xe7, 0x2e, 0xc0, 0x20, 0xc4, 0xc3, 0xc5, 0xe1, 0x18, 0x10, 0x10, 0xe4, 0x1f, 0xe6, 0xea, 0x22,
	0xc0, 0x08, 0xe2, 0xb9, 0x79, 0xfa, 0x79, 0x06, 0x7b, 0xb8, 0xba, 0x08, 0x30, 0x25, 0xb1, 0x81,
	0x5d, 0x68, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xef, 0x76, 0xc2, 0x7e, 0xaf, 0x00, 0x00, 0x00,
}
