package database

const (
	insertOrder     = "INSERT INTO ORDERS(ID, PRICE, HASHRATE, START_TIME, STATUS, ACTUAL_STEP) VALUES (:ID, :PRICE, :HASHRATE, :START_TIME, :STATUS, :ACTUAL_STEP)"
	insertTestOrder = "INSERT INTO ORDERS(ID, STATUS, ACTUAL_STEP) VALUES (:ID, :STATUS, :ACTUAL_STEP)"
	insertDeals     = "INSERT INTO DEALS(ID, STATUS, PRICE, ASK_ID, BID_ID, DEPLOY_STATUS, CHANGE_REQUEST_STATUS) VALUES (:ID, :STATUS, :PRICE, :ASK_ID, :BID_ID, :DEPLOY_STATUS, :CHANGE_REQUEST_STATUS )"
	insertToken     = "INSERT INTO TOKENS (TOKEN_ID, NAME, USD_PRICE, NET_HASHES_SEC, BLOCK_TIME, BLOCK_REWARD,  PROFIT_PER_MONTH_USD, DATE_TIME) VALUES (:TOKEN_ID, :NAME, :USD_PRICE, :NET_HASHES_SEC, :BLOCK_TIME, :BLOCK_REWARD, :PROFIT_PER_MONTH_USD, :DATE_TIME)"
	insertPools     = "INSERT INTO POOLS (DEAL_ID, POOL_ID, W_REP_HASH, W_AVG_HASH, BAD_GUY, ITERATIONS, TIME_START, TIME_UPDATE) VALUES (:DEAL_ID, :POOL_ID, :W_REP_HASH, :W_AVG_HASH, :BAD_GUY, :ITERATIONS, :TIME_START, :TIME_UPDATE)"
	insertBlackList = "INSERT INTO BLACKLIST (MASTER_ID, FAIL_SUPPLIER_ID, BAN_STATUS, DEAL_ID) VALUES (:MASTER_ID, :FAIL_SUPPLIER_ID, :BAN_STATUS, :DEAL_ID )"

	updateOrders              = "UPDATE ORDERS SET STATUS = ?	 WHERE ID = ?"
	updateDeployStatusDeal    = "UPDATE DEALS SET DEPLOY_STATUS = ?	 WHERE ID = ?"
	updateDeployAndDealStatus = "UPDATE DEALS SET DEPLOY_STATUS = ?, STATUS = ? WHERE ID = ?"
	updateCRStatusDeal        = "UPDATE DEALS SET CHANGE_REQUEST_STATUS=?, PRICE =? where ID = ?"
	returnCRStatusDeal        = "UPDATE DEALS SET CHANGE_REQUEST_STATUS=? where ID = ?"
	updateStatusPoolDB        = "UPDATE POOLS SET BAD_GUY = ?, TIME_UPDATE = ? WHERE DEAL_ID = ?"
	updateReportedHashrate    = "UPDATE POOLS SET W_REP_HASH = ?, TIME_UPDATE = ? WHERE DEAL_ID = ?"
	updateAvgPool             = "UPDATE POOLS SET W_AVG_HASH = ?, TIME_UPDATE = ? WHERE DEAL_ID = ?"
	updateBlackList           = "UPDATE BLACKLIST SET BAN_STATUS = ? WHERE MASTER_ID = ?"
	updateIterationPool       = "UPDATE POOLS SET ITERATIONS = ? WHERE DEAL_ID = ?"

	setDestroyStatusDeal = "UPDATE DEALS SET DEPLOY_STATUS =? WHERE ID = ?"

	getCountFromDb                  = "SELECT COUNT(ID) AS count FROM ORDERS"
	getSupplierIDFromBlackList      = "SELECT FAIL_SUPPLIER_ID FROM BLACKLIST WHERE FAIL_SUPPLIER_ID = ?"
	getMasterIDFromBlackList        = "SELECT MASTER_ID FROM BLACKLIST WHERE MASTER_ID = ?"
	getWorkerIDFromPool             = "SELECT DEAL_ID from POOLS WHERE DEAL_ID = ?"
	getCountSupplierIDFromBlackList = "SELECT COUNT(FAIL_SUPPLIER_ID) as count from BLACKLIST WHERE MASTER_ID = ?"
	getLastActualStep               = "SELECT MAX(ACTUAL_STEP) AS max FROM ORDERS WHERE STATUS = 2"
	getChangeRequestStatus          = "SELECT CHANGE_REQUEST_STATUS from DEALS WHERE ID = ?"
	getDeployStatusStatus           = "SELECT DEPLOY_STATUS from DEALS WHERE ID = ?"

	getOrders          = "SELECT * FROM ORDERS"
	getDeals           = "SELECT * FROM DEALS"
	getWorkersFromPool = "SELECT * FROM POOLS"

	blacklist = `
	CREATE TABLE IF NOT EXISTS BLACKLIST(
		MASTER_ID,
		FAIL_SUPPLIER_ID,
		BAN_STATUS,
		DEAL_ID
	);`

	deals = `
	CREATE TABLE IF NOT EXISTS DEALS(
		ID INT NOT NULL UNIQUE,
		STATUS TEXT NOT NULL ,
		PRICE INT NOT NULL,
		ASK_ID INT NOT NULL,
		BID_ID INT NOT NULL,
		DEPLOY_STATUS INT NOT NULL,
		CHANGE_REQUEST_STATUS INT NOT NULL
	);`

	orders = `
	CREATE TABLE IF NOT EXISTS ORDERS(
		ID INT NOT NULL UNIQUE,
		PRICE INT NOT NULL,
		HASHRATE INT NOT NULL,
		START_TIME DATETIME NOT NULL,
		STATUS INT NOT NULL,
		ACTUAL_STEP FLOAT NOT NULL
	);`

	tokens = `
	CREATE TABLE IF NOT EXISTS TOKENS (
		TOKEN_ID TEXT NOT NULL,
		NAME TEXT NOT NULL,
		USD_PRICE FLOAT NOT NULL,
		NET_HASHES_SEC FLOAT NOT NULL,
		BLOCK_TIME INT NOT NULL,
		BLOCK_REWARD FLOAT NOT NULL,
		PROFIT_PER_MONTH_USD FLOAT NOT NULL,
		DATE_TIME DATETIME NOT NULL
	);`
	pools = `
	CREATE TABLE IF NOT EXISTS POOLS (
		DEAL_ID TEXT NOT NULL UNIQUE,
		POOL_ID TEXT NOT NULL,
		W_REP_HASH FLOAT NOT NULL,
		W_AVG_HASH FLOAT NOT NULL,
		BAD_GUY INT NOT NULL,
		ITERATIONS INT NOT NULL, 
		TIME_START DATETIME NOT NULL,
		TIME_UPDATE DATETIME NOT NULL
	);`
)
