// Code generated by MockGen. DO NOT EDIT.
// Source: insonmnia/resource/resource.go

package resource

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCollector is a mock of Collector interface
type MockCollector struct {
	ctrl     *gomock.Controller
	recorder *MockCollectorMockRecorder
}

// MockCollectorMockRecorder is the mock recorder for MockCollector
type MockCollectorMockRecorder struct {
	mock *MockCollector
}

// NewMockCollector creates a new mock instance
func NewMockCollector(ctrl *gomock.Controller) *MockCollector {
	mock := &MockCollector{ctrl: ctrl}
	mock.recorder = &MockCollectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockCollector) EXPECT() *MockCollectorMockRecorder {
	return _m.recorder
}

// OS mocks base method
func (_m *MockCollector) OS() (*OS, error) {
	ret := _m.ctrl.Call(_m, "OS")
	ret0, _ := ret[0].(*OS)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OS indicates an expected call of OS
func (_mr *MockCollectorMockRecorder) OS() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "OS", reflect.TypeOf((*MockCollector)(nil).OS))
}
